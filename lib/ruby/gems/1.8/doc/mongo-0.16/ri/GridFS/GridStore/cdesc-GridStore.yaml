--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Array of strings; may be <tt>nil</tt>
  name: aliases
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: chunk_size
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Default is DEFAULT_CONTENT_TYPE
  name: content_type
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: filename
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: files_id
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: lineno
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: md5
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  name: metadata
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Time that the file was first saved.
  name: upload_date
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: exist?
- !ruby/object:RI::MethodSummary 
  name: list
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: open
- !ruby/object:RI::MethodSummary 
  name: read
- !ruby/object:RI::MethodSummary 
  name: readlines
- !ruby/object:RI::MethodSummary 
  name: unlink
comment: 
- !ruby/struct:SM::Flow::P 
  body: GridStore is an IO-like object that provides input and output for streams of data to Mongo. See Mongo's documentation about GridFS for storage implementation details.
- !ruby/struct:SM::Flow::P 
  body: "Example code:"
- !ruby/struct:SM::Flow::VERB 
  body: "  require 'mongo/gridfs'\n  GridStore.open(database, 'filename', 'w') { |f|\n    f.puts &quot;Hello, world!&quot;\n  }\n  GridStore.open(database, 'filename, 'r') { |f|\n    puts f.read         # =&gt; Hello, world!\\n\n  }\n  GridStore.open(database, 'filename', 'w+') { |f|\n    f.puts &quot;But wait, there's more!&quot;\n  }\n  GridStore.open(database, 'filename, 'r') { |f|\n    puts f.read         # =&gt; Hello, world!\\nBut wait, there's more!\\n\n  }\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_ROOT_COLLECTION
  value: "'fs'"
- !ruby/object:RI::Constant 
  comment: 
  name: DEFAULT_CONTENT_TYPE
  value: "'text/plain'"
full_name: GridFS::GridStore
includes: 
- !ruby/object:RI::IncludedModule 
  name: Enumerable
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: "<<"
- !ruby/object:RI::MethodSummary 
  name: chunk_collection
- !ruby/object:RI::MethodSummary 
  name: chunk_size=
- !ruby/object:RI::MethodSummary 
  name: close
- !ruby/object:RI::MethodSummary 
  name: closed?
- !ruby/object:RI::MethodSummary 
  name: collection
- !ruby/object:RI::MethodSummary 
  name: delete_chunks
- !ruby/object:RI::MethodSummary 
  name: each
- !ruby/object:RI::MethodSummary 
  name: each_byte
- !ruby/object:RI::MethodSummary 
  name: each_line
- !ruby/object:RI::MethodSummary 
  name: eof
- !ruby/object:RI::MethodSummary 
  name: eof?
- !ruby/object:RI::MethodSummary 
  name: flush
- !ruby/object:RI::MethodSummary 
  name: getc
- !ruby/object:RI::MethodSummary 
  name: gets
- !ruby/object:RI::MethodSummary 
  name: last_chunk_number
- !ruby/object:RI::MethodSummary 
  name: nth_chunk
- !ruby/object:RI::MethodSummary 
  name: print
- !ruby/object:RI::MethodSummary 
  name: putc
- !ruby/object:RI::MethodSummary 
  name: puts
- !ruby/object:RI::MethodSummary 
  name: read
- !ruby/object:RI::MethodSummary 
  name: readchar
- !ruby/object:RI::MethodSummary 
  name: readline
- !ruby/object:RI::MethodSummary 
  name: readlines
- !ruby/object:RI::MethodSummary 
  name: rewind
- !ruby/object:RI::MethodSummary 
  name: seek
- !ruby/object:RI::MethodSummary 
  name: tell
- !ruby/object:RI::MethodSummary 
  name: to_mongo_object
- !ruby/object:RI::MethodSummary 
  name: ungetc
- !ruby/object:RI::MethodSummary 
  name: write
name: GridStore
superclass: Object
