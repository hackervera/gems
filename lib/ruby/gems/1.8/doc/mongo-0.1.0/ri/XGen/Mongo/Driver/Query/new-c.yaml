--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "sel :"
    body: A hash describing the query. See the Mongo docs for details.
  - !ruby/struct:SM::Flow::LI 
    label: "return_fields :"
    body: If not <tt>nil</tt>, a single field name or an array of field names. Only those fields will be returned. (Called :fields in calls to Collection#find.)
  - !ruby/struct:SM::Flow::LI 
    label: "number_to_skip :"
    body: Number of records to skip before returning records. (Called :offset in calls to Collection#find.) Default is 0.
  - !ruby/struct:SM::Flow::LI 
    label: "number_to_return :"
    body: Max number of records to return. (Called :limit in calls to Collection#find.) Default is 0 (all records).
  - !ruby/struct:SM::Flow::LI 
    label: "order_by :"
    body: If not <tt>nil</tt>, specifies record sort order. May be a String, Hash, OrderedHash, or Array. If a string, the results will be ordered by that field in ascending order. If an array, it should be an array of field names which will all be sorted in ascending order. If a hash, it may be either a regular Hash or an OrderedHash. The keys should be field names, and the values should be 1 (ascending) or -1 (descending). Note that if it is a regular Hash then sorting by more than one field probably will not be what you intend because key order is not preserved. (order_by is called :sort in calls to Collection#find.)
  type: :NOTE
full_name: XGen::Mongo::Driver::Query::new
is_singleton: true
name: new
params: (sel={}, return_fields=nil, number_to_skip=0, number_to_return=0, order_by=nil)
visibility: public
